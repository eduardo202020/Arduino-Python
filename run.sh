#!/bin/bash

echo "===================================================="
echo "üå± SISTEMA DE RIEGO INTELIGENTE CON HISTORIAL"
echo "üöÄ ARDUINO-PYTHON - VERSI√ìN AVANZADA"
echo "===================================================="
echo ""

echo "¬øQu√© quieres hacer?"
echo "1. üîß Simulador de riego (BACKEND)"
echo "2. üìä Controlador de riego (TERMINAL)"
echo "3. üåê Dashboard Web Streamlit (PROFESIONAL)"
echo "4. üöÄ Demo completo autom√°tico"
echo "5. üîç Ver archivos del proyecto"
echo "6. üìã Instrucciones de uso"
echo ""

read -p "Elige una opci√≥n (1-6): " option

case $option in
    1)
        echo ""
        echo "üîß Iniciando simulador de riego..."
        echo "üìä Genera historial de 144 entradas (24 horas simuladas)"
        echo "üåê Servidor en puerto 9999"
        echo "üí° Para detener: presiona Ctrl+C"
        echo ""
        python3 simulador_corregido.py
        ;;
    2)
        echo ""
        echo "üìä Iniciando controlador de riego..."
        echo "üîç Dashboard interactivo con gr√°ficos en terminal"
        echo "‚ö†Ô∏è  IMPORTANTE: Aseg√∫rate de que el simulador est√© ejecut√°ndose"
        echo ""
        python3 controlador_corregido.py
        ;;
    3)
        echo ""
        echo "üåê Iniciando Dashboard Web Streamlit..."
        echo "üìà Dashboard profesional con gr√°ficos interactivos"
        echo "üîß Verificando dependencias..."
        
        # Verificar si streamlit est√° instalado
        if ! python3 -c "import streamlit" 2>/dev/null; then
            echo "üì¶ Instalando dependencias..."
            pip install -r requirements.txt
        fi
        
        echo "üöÄ Abriendo dashboard en el navegador..."
        echo "üì± URL: http://localhost:8501"
        echo "üí° Para detener: presiona Ctrl+C"
        echo ""
        streamlit run dashboard_streamlit.py
        ;;
    4)
        echo ""
        echo "üöÄ INICIANDO DEMO COMPLETO..."
        echo "üîß Abriendo simulador en segundo plano..."
        python3 simulador_corregido.py &
        SIMULATOR_PID=$!
        
        echo "‚è≥ Esperando 4 segundos para que cargue el historial..."
        sleep 4
        
        echo "üìä Iniciando controlador..."
        python3 controlador_corregido.py
        
        echo "üîÑ Deteniendo simulador..."
        kill $SIMULATOR_PID 2>/dev/null
        echo "‚úÖ Demo finalizado"
        ;;
    5)
        echo ""
        echo "üìÅ ARCHIVOS DEL PROYECTO:"
        echo "=================================="
        echo "üîß simulador_corregido.py - Simulador backend"
        echo "üìä controlador_corregido.py - Controlador terminal"
        echo "üåê dashboard_streamlit.py - Dashboard web profesional"
        echo "ü§ñ sistema_riego.ino - C√≥digo Arduino"
        echo "üìã requirements.txt - Dependencias Python"
        echo "üöÄ run.sh - Este men√∫"
        echo ""
        ls -la *.py *.ino *.txt 2>/dev/null
        ;;
    6)
        echo ""
        echo "üìã INSTRUCCIONES DE USO"
        echo "======================================================="
        echo ""
        echo "üå± SISTEMA DE RIEGO INTELIGENTE"
        echo "‚Ä¢ 2 Sensores de humedad del suelo"
        echo "‚Ä¢ 2 Sensores de temperatura"
        echo "‚Ä¢ 2 Bombas/v√°lvulas de riego independientes"
        echo "‚Ä¢ Historial de 144 entradas (24 horas)"
        echo "‚Ä¢ Dashboard con gr√°ficos en tiempo real"
        echo "‚Ä¢ Control autom√°tico y manual"
        echo ""
        echo "üåê DASHBOARD WEB STREAMLIT (RECOMENDADO):"
        echo "   Opci√≥n 3: Dashboard web profesional"
        echo "   ‚Ä¢ Gr√°ficos interactivos con Plotly"
        echo "   ‚Ä¢ M√©tricas en tiempo real"
        echo "   ‚Ä¢ Interfaz moderna y responsive"
        echo "   ‚Ä¢ Control de bombas desde la web"
        echo ""
        echo "üîß FORMA MANUAL (2 terminales):"
        echo "   Terminal 1: Opci√≥n 1 (Simulador)"
        echo "   Terminal 2: Opci√≥n 2 (Controlador terminal)"
        echo ""
        echo "üöÄ DEMO AUTOM√ÅTICO:"
        echo "   Opci√≥n 4: Demo completo con controlador terminal"
        echo ""
        echo "ü§ñ PARA ARDUINO F√çSICO:"
        echo "   1. Sube sistema_riego.ino al Arduino"
        echo "   2. Conecta sensores seg√∫n esquema"
        echo "   3. Modifica controlador para puerto serie"
        echo ""
        echo "üìä FUNCIONES DEL DASHBOARD WEB:"
        echo "   ‚Ä¢ Estado actual con m√©tricas coloridas"
        echo "   ‚Ä¢ Gr√°ficos de tendencias interactivos"
        echo "   ‚Ä¢ Estad√≠sticas detalladas con charts"
        echo "   ‚Ä¢ Control de bombas via web"
        echo "   ‚Ä¢ Auto-actualizaci√≥n en tiempo real"
        echo "   ‚Ä¢ Visualizaci√≥n de eficiencia del sistema"
        echo ""
        echo "üì¶ INSTALACI√ìN DE DEPENDENCIAS:"
        echo "   pip install -r requirements.txt"
        echo ""
        ;;
    *)
        echo "‚ùå Opci√≥n no v√°lida"
        ;;
esac
