#!/bin/bash

echo "===================================================="
echo "üå± SISTEMA DE RIEGO INTELIGENTE CON HISTORIAL"
echo "üöÄ ARDUINO-PYTHON - VERSI√ìN AVANZADA"
echo "===================================================="
echo ""

echo "¬øQu√© quieres hacer?"
echo "1. üîß Simulador de riego (BACKEND)"
echo "2. üìä Controlador de riego (TERMINAL)"
echo "3. üåê Dashboard Web Streamlit (PROFESIONAL)"
echo "4. üöÄ Demo completo autom√°tico"
echo "5. üß™ Test nuevos sensores"
echo "6. üé≠ Demo sensores especializados"
echo "7. üéÆ Simulaci√≥n 3D Web (PLOTLY)"
echo "8. üó∫Ô∏è Simulaci√≥n 3D ASCII (TERMINAL)"
echo "9. üìä Simulaci√≥n 3D Matplotlib"
echo "10. üîç Ver archivos del proyecto"
echo "11. üìã Instrucciones de uso"
echo "12. üå≥ Simulaci√≥n 3D √Årboles Three.js (NUEVA)"
echo ""

read -p "Elige una opci√≥n (1-12): " option

case $option in
    1)
        echo ""
        echo "üîß Iniciando simulador de riego..."
        echo "üìä Genera historial de 144 entradas (24 horas simuladas)"
        echo "üåê Servidor en puerto 9999"
        echo "üí° Para detener: presiona Ctrl+C"
        echo ""
        python3 simulador_corregido.py
        ;;
    2)
        echo ""
        echo "üìä Iniciando controlador de riego..."
        echo "üîç Dashboard interactivo con gr√°ficos en terminal"
        echo "‚ö†Ô∏è IMPORTANTE: Aseg√∫rate de que el simulador est√© ejecut√°ndose"
        echo ""
        python3 controlador_corregido.py
        ;;
    3)
        echo ""
        echo "üåê Iniciando Dashboard Web Streamlit..."
        echo "üìà Dashboard profesional con gr√°ficos interactivos"
        echo "üîß Verificando dependencias..."
        
        # Verificar si streamlit est√° instalado
        if ! python3 -c "import streamlit" 2>/dev/null; then
            echo "üì¶ Instalando dependencias..."
            pip install -r requirements.txt
        fi
        
        echo "üöÄ Abriendo dashboard en el navegador..."
        echo "üì± URL: http://localhost:8501"
        echo "üí° Para detener: presiona Ctrl+C"
        echo ""
        streamlit run dashboard_streamlit.py
        ;;
    4)
        echo ""
        echo "üöÄ INICIANDO DEMO COMPLETO..."
        echo "üîß Abriendo simulador en segundo plano..."
        python3 simulador_corregido.py &
        SIMULATOR_PID=$!
        
        echo "‚è≥ Esperando 4 segundos para que cargue el historial..."
        sleep 4
        
        echo "üìä Iniciando controlador..."
        python3 controlador_corregido.py
        
        echo "üîÑ Deteniendo simulador..."
        kill $SIMULATOR_PID 2>/dev/null
        echo "‚úÖ Demo finalizado"
        ;;
    5)
        echo ""
        echo "üß™ TESTING: NUEVOS SENSORES"
        echo "=============================="
        echo "üåø Temperatura de la planta"
        echo "üå´Ô∏è Humedad relativa del entorno"
        echo ""
        python3 test_nuevos_sensores.py
        ;;
    6)
        echo ""
        echo "üé≠ DEMO: SENSORES ESPECIALIZADOS"
        echo "================================="
        echo "üåø Simulaci√≥n de temperatura de planta"
        echo "üå´Ô∏è Simulaci√≥n de humedad relativa"
        echo "‚è±Ô∏è Demo de 20 segundos con ciclo d√≠a/noche"
        echo ""
        python3 demo_sensores.py
        ;;
    7)
        echo ""
        echo "üéÆ SIMULACI√ìN 3D WEB (PLOTLY)"
        echo "=============================="
        echo "üåê Visualizaci√≥n 3D interactiva en navegador"
        echo "üå°Ô∏è Campos de temperatura y humedad"
        echo "üöø Efectos de riego en tiempo real"
        echo ""
        echo "üîß Verificando dependencias..."
        if ! python3 -c "import plotly" 2>/dev/null; then
            echo "üì¶ Instalando plotly..."
            pip install plotly
        fi
        echo "üöÄ Generando simulaci√≥n 3D web..."
        
        # Usar la versi√≥n funcional
        python3 simulacion_3d_web_funcional.py
        
        if [ -f "simulacion_riego_3d_funcional.html" ]; then
            echo ""
            echo "‚úÖ ¬°SIMULACI√ìN 3D GENERADA EXITOSAMENTE!"
            echo "üìÇ Archivo: simulacion_riego_3d_funcional.html"
            echo "üåê Abre este archivo en tu navegador para ver la simulaci√≥n"
            echo "üéÆ La simulaci√≥n incluye:"
            echo "   ‚Ä¢ üå°Ô∏è Campo de temperatura 3D"
            echo "   ‚Ä¢ üíß Campo de humedad 3D"
            echo "   ‚Ä¢ üå± Vista combinada con jets de riego"
            echo "   ‚Ä¢ üìä Estado en tiempo real de las plantas"
        else
            echo "‚ùå Error generando simulaci√≥n 3D"
            echo "üí° Verifica que plotly est√© instalado: pip install plotly"
        fi
        ;;
    8)
        echo ""
        echo "üó∫Ô∏è SIMULACI√ìN 3D ASCII (TERMINAL)"
        echo "=================================="
        echo "üéÆ Vista 3D del terreno en terminal"
        echo "üå°Ô∏è Campos de temperatura visualizados"
        echo "üíß Efectos de riego en ASCII"
        echo "‚ö° Sin dependencias externas"
        echo ""
        python3 simulacion_3d_ascii.py
        ;;
    9)
        echo ""
        echo "üìä SIMULACI√ìN 3D MATPLOTLIB"
        echo "============================"
        echo "üéØ Visualizaci√≥n 3D con matplotlib"
        echo "üìà Gr√°ficos cient√≠ficos detallados"
        echo "üîÑ Animaci√≥n en tiempo real"
        echo ""
        echo "üîß Verificando dependencias..."
        if ! python3 -c "import matplotlib" 2>/dev/null; then
            echo "üì¶ Instalando matplotlib..."
            pip install matplotlib
        fi
        echo "üöÄ Iniciando simulaci√≥n 3D matplotlib..."
        python3 simulacion_3d.py
        ;;
    10)
        echo ""
        echo "üìÅ ARCHIVOS DEL PROYECTO:"
        echo "=================================="
        echo "üîß simulador_corregido.py - Simulador backend"
        echo "üìä controlador_corregido.py - Controlador terminal"
        echo "üåê dashboard_streamlit.py - Dashboard web profesional"
        echo "üå≥ simulacion_arbol_threejs.html - Simulaci√≥n 3D √°rboles"
        echo "ü§ñ sistema_riego.ino - C√≥digo Arduino"
        echo "üìã requirements.txt - Dependencias Python"
        echo "üöÄ run.sh - Este men√∫"
        echo ""
        ls -la *.py *.html *.ino *.txt *.sh 2>/dev/null | head -20
        ;;
    11)
        echo ""
        echo "üìã INSTRUCCIONES DE USO"
        echo "======================================================="
        echo ""
        echo "üå± SISTEMA DE RIEGO INTELIGENTE"
        echo "‚Ä¢ 2 Sensores de humedad del suelo"
        echo "‚Ä¢ 2 Sensores de temperatura ambiente"
        echo "‚Ä¢ üåø Sensor de temperatura de la planta"
        echo "‚Ä¢ üå´Ô∏è Sensor de humedad relativa del entorno"
        echo "‚Ä¢ 2 Bombas/v√°lvulas de riego independientes"
        echo "‚Ä¢ Historial de 144 entradas (24 horas)"
        echo "‚Ä¢ Dashboard con gr√°ficos en tiempo real"
        echo "‚Ä¢ Control autom√°tico y manual"
        echo ""
        echo "üåê DASHBOARD WEB STREAMLIT (RECOMENDADO):"
        echo "   Opci√≥n 3: Dashboard web profesional"
        echo "   ‚Ä¢ Gr√°ficos interactivos con Plotly"
        echo "   ‚Ä¢ M√©tricas en tiempo real"
        echo "   ‚Ä¢ Interfaz moderna y responsive"
        echo "   ‚Ä¢ Control de bombas desde la web"
        echo "   ‚Ä¢ üå≥ Nueva pesta√±a con √°rboles 3D realistas"
        echo ""
        echo "üîß FORMA MANUAL (2 terminales):"
        echo "   Terminal 1: Opci√≥n 1 (Simulador)"
        echo "   Terminal 2: Opci√≥n 2 (Controlador terminal)"
        echo ""
        echo "üöÄ DEMO AUTOM√ÅTICO:"
        echo "   Opci√≥n 4: Demo completo con controlador terminal"
        echo ""
        echo "üå≥ SIMULACI√ìN 3D √ÅRBOLES (NUEVA):"
        echo "   Opci√≥n 12: Visualizaci√≥n ultra-realista con Three.js"
        echo "   ‚Ä¢ √Årboles 3D con follaje multicapa"
        echo "   ‚Ä¢ Part√≠culas de agua animadas"
        echo "   ‚Ä¢ Efectos ambientales (viento, luz)"
        echo "   ‚Ä¢ Cambios de color seg√∫n salud"
        echo ""
        echo "ü§ñ PARA ARDUINO F√çSICO:"
        echo "   1. Sube sistema_riego.ino al Arduino"
        echo "   2. Conecta sensores seg√∫n esquema"
        echo "   3. Modifica controlador para puerto serie"
        echo ""
        echo "üì¶ INSTALACI√ìN DE DEPENDENCIAS:"
        echo "   pip install -r requirements.txt"
        echo ""
        ;;
    12)
        echo ""
        echo "üå≥ SIMULACI√ìN 3D √ÅRBOLES THREE.JS"
        echo "=================================="
        echo "üå± Visualizaci√≥n 3D ultra-realista con √°rboles"
        echo "üéÆ Efectos ambientales avanzados"
        echo "üíß Part√≠culas de agua animadas"
        echo ""
        echo "Opciones disponibles:"
        echo "a) üåê Simulaci√≥n independiente (HTML)"
        echo "b) üìä Integraci√≥n en dashboard Streamlit"
        echo ""
        read -p "Selecciona opci√≥n (a/b): " threejs_option
        
        case $threejs_option in
            a)
                echo "üå≥ Abriendo simulaci√≥n Three.js independiente..."
                if [ -f "simulacion_arbol_threejs.html" ]; then
                    echo "üìÇ Archivo encontrado: simulacion_arbol_threejs.html"
                    echo "üåê Abriendo en navegador predeterminado..."
                    if command -v xdg-open > /dev/null; then
                        xdg-open simulacion_arbol_threejs.html
                    elif command -v open > /dev/null; then
                        open simulacion_arbol_threejs.html
                    elif command -v start > /dev/null; then
                        start simulacion_arbol_threejs.html
                    else
                        echo "‚ö†Ô∏è No se pudo abrir autom√°ticamente."
                        echo "üìç Abre manualmente: $(pwd)/simulacion_arbol_threejs.html"
                    fi
                    echo ""
                    echo "‚úÖ ¬°SIMULACI√ìN THREE.JS CARGADA!"
                    echo "üéÆ CONTROLES:"
                    echo "   ‚Ä¢ Arrastra para rotar la c√°mara"
                    echo "   ‚Ä¢ Scroll para zoom in/out"
                    echo "   ‚Ä¢ Ajusta temperatura y humedad"
                    echo "   ‚Ä¢ Activa riego para ver part√≠culas"
                    echo "   ‚Ä¢ Observa el cambio de color de los √°rboles"
                else
                    echo "‚ùå Error: simulacion_arbol_threejs.html no encontrado"
                    echo "üîß Ejecutando script para crear el archivo..."
                    python3 simulacion_arbol_threejs_streamlit.py
                fi
                ;;
            b)
                echo "üå≥ Iniciando dashboard con simulaci√≥n Three.js integrada..."
                echo "üåê Dashboard con Three.js disponible en: http://localhost:8501"
                echo "üìç Ve a la pesta√±a 'üå≥ √Årboles 3D' para ver la simulaci√≥n realista"
                echo "üí° Para detener: presiona Ctrl+C"
                echo ""
                streamlit run dashboard_streamlit.py --server.port 8501 --server.headless true
                ;;
            *)
                echo "‚ùå Opci√≥n no v√°lida"
                ;;
        esac
        ;;
    *)
        echo "‚ùå Opci√≥n no v√°lida. Por favor, selecciona una opci√≥n del 1 al 12."
        ;;
esac
